<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${package}.${pkgName}.dao.${className}Dao">

    <!-- 通用查询映射结果  -->
    <resultMap type="${package}.${pkgName}.model.${className}" id="BaseResultMap">

        #foreach($column in $columns)
            <result property="${column.attrname}" column="${column.columnName}"/>
        #end

    </resultMap>

    <sql id="baseColumnList">
        #foreach($column in $columns)
        `${column.columnName}` as ${column.attrname}
        #if( ${columnLast.columnName} != $column.columnName),#end
    #end
    </sql>

    <sql id="BaseWhere">
        WHERE data_state = 0
    </sql>


    <sql id="where">
        <where>
            #foreach($column in $columns)
                #if(!($column.dtoIgnore))
                    <if test="data.${column.columnName} != null">
                        #if($column.attrType == 'String')
                            AND t.`${column.columnName}` LIKE concat('%',#{data.${column.attrname}}, '%')
                        #else
                            AND t.`${column.columnName}` = #{data.${column.attrname}}
                        #end
                    </if>
                #end
            #end
        </where>
    </sql>

    #* 保存 *#
    <insert id="save">
        insert into ${tableName}(#foreach($column in $columns)
        #if($column.createIgnore == false)
            `${column.columnName}`#if( ${createLast.columnName} != $column.columnName),#end
        #end
    #end) values (#foreach($column in $columns)
        #if($column.createIgnore == false)
            #{${column.attrname}}#if( ${createLast.columnName} != $column.columnName),#end
        #end
    #end)
        </insert>

    #* 批量保存 *#
    <insert id="batchSave">
        insert into ${tableName}(
        #foreach($column in $columns)
            #if($column.createIgnore == false)
                `${column.columnName}`
                #if( ${createLast.columnName} != $column.columnName), #end
            #end
        #end
        ) values
        <foreach collection="java.util.List" item="item" index="index" separator=",">
            (
            #foreach($column in $columns)
                #if($column.createIgnore == false)
                    #{item.${column.attrname}}
                    #if( ${createLast.columnName} != $column.columnName), #end
                #end
            #end
            )
        </foreach>

    </insert>

    #* 编辑 *#
    <update id="update">
        UPDATE ${tableName}
        <set>
            #foreach($column in $columns)
                #if($column.updateIgnore == false)
                    <if test="${column.attrname} != null">
                        `${column.columnName}` = #{${column.attrname}}
                        #if( ${updateLast} != $column.columnName),#end
                    </if>
                #end
            #end
        </set>
        <include refid="BaseWhere"/>
        AND id = #{id}
    </update>

    #* 删除 *#
    <delete id="delete" parameterType="java.lang.Long" flushCache="true">
        UPDATE ${tableName} SET data_state = 2
        <include refid="BaseWhere"/>
        AND id = #{id}
    </delete>

    #* 批量删除 *#
    <delete id="batchDelete" parameterType="java.util.List" flushCache="true">

        UPDATE ${tableName} SET data_state = 2
        <include refid="BaseWhere"/>
        AND id IN
        <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    #* 通过ID 查询  *#
    <select id="findOneById" parameterType="java.lang.Long" resultType="${package}.${pkgName}.model.${className}">
        SELECT
        <include refid="baseColumnList"/>
        FROM ${tableName}
        <include refid="BaseWhere"/>
        AND id = #{id}
    </select>


    #* 通过ID 查询  *#
    <select id="findAllById" parameterType="list" resultType="${package}.${pkgName}.model.${className}">
        SELECT
        <include refid="baseColumnList"/>
        FROM ${tableName}
        <include refid="BaseWhere"/>
        AND id IN
        <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>




    #* 条件 查询 *#
    <select id="findOneByCnd" parameterType="java.lang.Long" resultType="${package}.${pkgName}.model.${className}">
        SELECT
        <include refid="baseColumnList"/>
        FROM ${tableName}
        <include refid="BaseWhere"/>
        <include refid="where"/>
    </select>

    #* 列表查询 分页查询 *#
    <select id="findAll" resultType="${package}.${pkgName}.model.${className}">
        SELECT
        <include refid="baseColumnList"/>
        FROM ${tableName} t
        <include refid="BaseWhere"/>
        <include refid="where"/>
    </select>

    #* 列表查询 不分页查询 *#
    <select id="list" resultType="${package}.${pkgName}.model.${className}">
        SELECT
        <include refid="baseColumnList"/>
        FROM ${tableName} t
        <include refid="BaseWhere"/>
        <include refid="where"/>
    </select>


</mapper>